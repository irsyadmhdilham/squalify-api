# Generated by Django 2.1.2 on 2018-11-13 15:38

import apis._models.agency
import apis._models.contact
import apis._models.profile
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('agency_image', models.ImageField(upload_to=apis._models.agency.agency_directory_path)),
            ],
            options={
                'verbose_name_plural': 'Agencies',
            },
        ),
        migrations.CreateModel(
            name='Applause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('remark', models.TextField(blank=True, null=True)),
                ('contact_no', models.CharField(max_length=30)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=apis._models.contact.contact_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='ContactStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Conversation')),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('millionnaire_suit', models.IntegerField(default=0)),
                ('be_early_training', models.IntegerField(default=0)),
                ('calls_emails_socmed', models.IntegerField(default=0)),
                ('appointment_secured', models.IntegerField(default=0)),
                ('referrals', models.IntegerField(default=0)),
                ('sales_presentation', models.IntegerField(default=0)),
                ('ftf_booth_nesting', models.IntegerField(default=0)),
                ('case_closed', models.IntegerField(default=0)),
                ('career_presentation', models.IntegerField(default=0)),
                ('sign_up_contract', models.IntegerField(default=0)),
                ('personal_coaching', models.IntegerField(default=0)),
                ('joining_field_work', models.IntegerField(default=0)),
                ('servicing_follow_up', models.IntegerField(default=0)),
                ('update_upline', models.IntegerField(default=0)),
                ('agency_program', models.IntegerField(default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('applause', models.ManyToManyField(blank=True, to='apis.Applause')),
                ('comments', models.ManyToManyField(blank=True, to='apis.Comment')),
                ('contact_relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='PostType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('profile_image', models.ImageField(upload_to=apis._models.profile.user_directory_path)),
                ('settings', django.contrib.postgres.fields.jsonb.JSONField(default={'notifications': {'email_notification': True, 'push_notification': {'activities': True, 'direct_message': True, 'mentions': True, 'reminder': True}}, 'social_net_acc': {'dropbox': None, 'facebook': None, 'google': None}})),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Agency')),
                ('contacts', models.ManyToManyField(blank=True, to='apis.Contact')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Designation')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.Group')),
                ('inbox', models.ManyToManyField(blank=True, to='apis.Inbox')),
                ('notifications', models.ManyToManyField(blank=True, to='apis.Notification')),
                ('points', models.ManyToManyField(blank=True, to='apis.Point')),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('commission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('document_id', models.CharField(blank=True, max_length=100, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='SalesStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_status', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalesType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('title', models.CharField(max_length=200)),
                ('remark', models.TextField(blank=True, null=True)),
                ('location', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('repetition', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='apis.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Surcharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surcharge', models.FloatField(default=None)),
            ],
        ),
        migrations.AddField(
            model_name='sales',
            name='sales_status',
            field=models.ForeignKey(default='Submitted', on_delete=django.db.models.deletion.CASCADE, to='apis.SalesStatus', to_field='sales_status'),
        ),
        migrations.AddField(
            model_name='sales',
            name='sales_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.SalesType'),
        ),
        migrations.AddField(
            model_name='sales',
            name='surcharge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.Surcharge'),
        ),
        migrations.AddField(
            model_name='profile',
            name='sales',
            field=models.ManyToManyField(blank=True, to='apis.Sales'),
        ),
        migrations.AddField(
            model_name='profile',
            name='schedules',
            field=models.ManyToManyField(blank=True, to='apis.Schedule'),
        ),
        migrations.AddField(
            model_name='profile',
            name='upline',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='post_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.PostType'),
        ),
        migrations.AddField(
            model_name='post',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='post',
            name='sales_relation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.Sales'),
        ),
        migrations.AddField(
            model_name='post',
            name='users_tagged',
            field=models.ManyToManyField(blank=True, related_name='users', to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='apis.NotificationType'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='inbox',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='senders', to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='group',
            name='industry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Industry'),
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(related_name='group_members', to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='group',
            name='owner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='subscriber',
            field=models.ManyToManyField(to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='contact',
            name='contact_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.ContactType'),
        ),
        migrations.AddField(
            model_name='contact',
            name='schedule',
            field=models.ManyToManyField(blank=True, related_name='contact_schedules', to='apis.Schedule'),
        ),
        migrations.AddField(
            model_name='contact',
            name='status',
            field=models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='apis.ContactStatus', to_field='status'),
        ),
        migrations.AddField(
            model_name='comment',
            name='commented_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='applause',
            name='applausers',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='agency',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Company'),
        ),
        migrations.AddField(
            model_name='agency',
            name='industry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.Industry'),
        ),
        migrations.AddField(
            model_name='agency',
            name='members',
            field=models.ManyToManyField(related_name='agency_members', to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='agency',
            name='owner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agency_owner', to='apis.Profile'),
        ),
        migrations.AddField(
            model_name='agency',
            name='posts',
            field=models.ManyToManyField(blank=True, to='apis.Post'),
        ),
    ]
